#!/bin/bash -e

##
## Set debugging
##
set -ux


##
## Current working directory
##
CWD=$(dirname $0)

. ${CHARM_DIR}/hooks/hpcc-common


##
## Detect Linux Distro
##
uname -a  | grep -q "x86_64" || ( juju-log "Only arch x86_64 is supported."; exit 1)

get_os_info

##
## HPCC prerequisites
##
dependencies_dir=${CWD}/../dependencies
if [ ! -e ${dependencies_dir}/${os_id} ]
then
   juju-log "Prequisites for $os_id hasn't been implemented yet."
   exit 1
fi
${dependencies_dir}/${os_id}  || exit 1


##
## Download and install HPCC
##
download_hpcc_platform
install_hpcc_platform


##
## Set SSH keys
## Using shipped for now. Will provide script to generate new kyes later
##
parse_env_config
echo $PATH_HOME

if [ ! -d $PATH_HOME/.ssh ]; then
   mkdir $PATH_HOME/.ssh
fi
rm -fr $PATH_HOME/.ssh/*

#set +x
PUB_KEY=$(config-get ssh-key-public)
PRI_KEY=$(config-get ssh-key-private)
fix_private_key
set_ssh_keys
if [ ! -e ${PATH_HOME}/.ssh/id_rsa ]
then
   create_and_set_ssh_keys 0
fi
#set -x

##
## Open the necessory firewall ports
##
which open-port  && \
if [ $? -eq 0 ];then
   open-port 8010/TCP
   open-port 8002/TCP
   open-port 8015/TCP
   open-port 9876/TCP
   #open-port 18010/TCP
   #open-port 18002/TCP
   #open-port 18008/TCP
fi

##
## Create directory for stagging and tempory files
##
if [  -e ${JUJU_HPCC_DIR} ]
then
  rm -rf ${JUJU_HPCC_DIR}/*
fi
mkdir -p $JUJU_HPCC_DIR
chmod -R 777 $JUJU_HPCC_DIR
